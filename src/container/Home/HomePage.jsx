import React, { useEffect, useRef } from "react";
import gsap from "gsap";
import { ScrollTrigger } from "gsap/ScrollTrigger";
import HomeHeader from "./HomeHeader/HomeHeader";
import resume from "../../assets/img/resume.png";
import Footer from "./Footer/Footer";
import {
  FaHandshake,
  FaRegLightbulb,
  FaClipboardList,
  FaChartLine,
  FaUsersCog,
  FaCode,
  FaServer,
  FaBug,
  FaMobileAlt,
  FaCogs,
  FaChartBar,
} from "react-icons/fa";
import TestimonialSection from "../components/Section/TestimonialSection";
import { useNavigate } from "react-router-dom";
import { path } from "../../utils/constant";
gsap.registerPlugin(ScrollTrigger);

const HomePage = () => {
  const sectionRefs = useRef([]);
  const heroTitleRef = useRef(null);
  const heroImageRef = useRef(null);
const navigate = useNavigate()
  useEffect(() => {
    sectionRefs.current.forEach((el) => {
      if (!el) return;
      gsap.fromTo(
        el,
        { opacity: 0, y: 50 },
        {
          opacity: 1,
          y: 0,
          duration: 0.5,
          ease: "power2.out",
          scrollTrigger: {
            trigger: el,
            start: "top 80%",
            end: "bottom 60%",
            toggleActions: "play none none reverse",
          },
        }
      );
    });

    // Hero text animation
    gsap.fromTo(
      heroTitleRef.current,
      { opacity: 0, x: -100 },
      { opacity: 1, x: 0, duration: 1, delay: 0.3, ease: "power2.out" }
    );

    // Hero image animation
    gsap.fromTo(
      heroImageRef.current,
      { opacity: 0, scale: 0.8 },
      { opacity: 1, scale: 1, duration: 1, delay: 0.6, ease: "power2.out" }
    );
  }, []);
  //position
  const positions = [
    {
      title: "Front-end Developer",
      skills: "React, HTML, CSS, Tailwind, Figma",
      icon: <FaCode className="text-blue-500 text-2xl mb-2 mx-auto " />,
    },
    {
      title: "Back-end Developer",
      skills: "Node.js, Express, MySQL, RESTful API",
      icon: <FaServer className="text-green-500 text-2xl mb-2 mx-auto" />,
    },
    {
      title: "Tester (QA/QC)",
      skills: "Manual, Automation, Selenium, Postman",
      icon: <FaBug className="text-red-500 text-2xl mb-2 mx-auto" />,
    },
    {
      title: "Mobile Developer",
      skills: "React Native, Flutter, Android",
      icon: <FaMobileAlt className="text-purple-500 text-2xl mb-2 mx-auto" />,
    },
    {
      title: "DevOps Intern",
      skills: "Docker, Jenkins, GitHub Actions, AWS",
      icon: <FaCogs className="text-yellow-500 text-2xl mb-2 mx-auto" />,
    },
    {
      title: "Data Analyst Intern",
      skills: "SQL, Excel, Power BI, Python",
      icon: <FaChartBar className="text-pink-500 text-2xl mb-2 mx-auto" />,
    },
  ];

  const businessBenefits = [
    {
      icon: <FaRegLightbulb className="text-purple-600 text-4xl mx-auto" />,
      title: "Ti·∫øt ki·ªám chi ph√≠ tuy·ªÉn d·ª•ng",
      desc: "Kh√¥ng c·∫ßn ƒëƒÉng tuy·ªÉn ph·ª©c t·∫°p, d·ªÖ d√†ng ti·∫øp c·∫≠n th·ª±c t·∫≠p sinh ti·ªÅm nƒÉng.",
    },
    {
      icon: <FaClipboardList className="text-blue-600 text-4xl mx-auto" />,
      title: "Qu·∫£n l√Ω h·ªì s∆° d·ªÖ d√†ng",
      desc: "Xem v√† l·ªçc h·ªì s∆° sinh vi√™n theo k·ªπ nƒÉng, ng√†nh h·ªçc v√† th·ªùi gian.",
    },
    {
      icon: <FaUsersCog className="text-green-600 text-4xl mx-auto" />,
      title: "Ch·ªß ƒë·ªông ch·ªçn ·ª©ng vi√™n",
      desc: "T·ª± do ph·ªèng v·∫•n, ƒë√°nh gi√° v√† quy·∫øt ƒë·ªãnh ·ª©ng vi√™n ph√π h·ª£p.",
    },
    {
      icon: <FaChartLine className="text-yellow-500 text-4xl mx-auto" />,
      title: "Gia tƒÉng nh·∫≠n di·ªán th∆∞∆°ng hi·ªáu",
      desc: "Xu·∫•t hi·ªán tr√™n n·ªÅn t·∫£ng c·ªßa PLT Solutions, thu h√∫t nhi·ªÅu sinh vi√™n quan t√¢m.",
    },
  ];

  return (
    <div className="font-sans text-gray-900 px-0 md:px-0 overflow-x-hidden">
      <HomeHeader />

      {/* Hero Section */}
      <section className="w-full bg-gradient-to-r from-blue-600 to-cyan-600 text-white py-24 mb-8 overflow-hidden">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex flex-col md:flex-row items-center justify-between gap-12">
          {/* LEFT */}
          <div className="w-full md:w-3/5 mt-12 md:mt-20" ref={heroTitleRef}>
            <h1 className="text-3xl md:text-4xl font-bold mb-4 leading-snug">
              N·ªÅn T·∫£ng K·∫øt N·ªëi <br />
              <span className="text-4xl md:text-5xl">
                Th·ª±c T·∫≠p Sinh &amp; Doanh Nghi·ªáp
              </span>
            </h1>
            <p className="mb-6 text-base md:text-lg">
              PLT Solutions gi√∫p sinh vi√™n IT t√¨m ƒë∆∞·ª£c c∆° h·ªôi th·ª±c t·∫≠p ph√π h·ª£p
              v√† h·ªó tr·ª£ doanh nghi·ªáp tuy·ªÉn ƒë√∫ng ng∆∞·ªùi, ƒë√∫ng k·ªπ nƒÉng.
            </p>
          </div>

          {/* RIGHT */}
          <div className="w-full md:w-2/5 flex justify-center">
            <div
              className="w-72 md:w-96 h-72 md:h-96 rounded-xl overflow-hidden"
              ref={heroImageRef}
            >
              <img
                src={resume}
                alt="·∫¢nh minh h·ªça"
                className="w-full h-full object-cover"
              />
            </div>
          </div>
        </div>
      </section>

      {/* Business Benefits */}
      <section
        className="px-16 gap-10 text-center py-10 bg-gray-50 section-scroll"
        ref={(el) => (sectionRefs.current[0] = el)}
      >
        <h2 className="text-3xl font-semibold text-center mb-10">
          L·ª£i √≠ch c·ªßa doanh nghi·ªáp
        </h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6 text-center">
          {businessBenefits.map((item, idx) => (
            <div
              key={idx}
              className="bg-white shadow-md p-6 rounded-xl space-y-3 hover:shadow-lg hover:-translate-y-1 transform transition duration-300 cursor-pointer"
            >
              {item.icon}
              <h3 className="text-xl font-semibold">{item.title}</h3>
              <p className="text-sm text-gray-600">{item.desc}</p>
            </div>
          ))}
        </div>
      </section>

      {/* Internship Positions */}
      <section
        className="px-16 md:px-10 py-10 section-scroll"
        ref={(el) => (sectionRefs.current[1] = el)}
      >
        <h2 className="text-3xl font-semibold text-center mb-10">
          V·ªã Tr√≠ Th·ª±c T·∫≠p Ph·ªï Bi·∫øn
        </h2>
        <div className="grid md:grid-cols-3 gap-6 px-16">
          {positions.map((item, index) => (
            <div
              key={index}
              className="bg-white shadow-md rounded p-4 text-center hover:shadow-lg hover:-translate-y-1 transform transition duration-300 cursor-pointer"
            >
              {item.icon}
              <h3 className="font-semibold mb-2">{item.title}</h3>
              <p className="text-sm text-gray-600">{item.skills}</p>
            </div>
          ))}
        </div>
      </section>

      {/* Benefit */}
      <section
        className="px-4 md:px-10 py-10 bg-white text-center section-scroll"
        ref={(el) => (sectionRefs.current[2] = el)}
      >
        <h2 className="text-2xl font-semibold mb-10">
          L·ª£i √≠ch khi th·ª±c t·∫≠p t·∫°i doanh nghi·ªáp v·ª´a & nh·ªè
        </h2>
        <div className="grid md:grid-cols-3 gap-6">
          <div className="bg-gray-50 rounded-lg p-4 shadow-sm hover:shadow-lg hover:-translate-y-1 transform transition duration-300 cursor-pointer">
            <h4 className="font-semibold mb-2">üéØ ƒê∆∞·ª£c giao vi·ªác th·ª±c t·∫ø</h4>
            <p className="text-sm text-gray-600">
              Kh√¥ng ph·∫£i ch·ªâ ƒëi pha tr√†, b·∫°n s·∫Ω ƒë∆∞·ª£c l√†m d·ª± √°n th·∫≠t, c√≥ ng∆∞·ªùi
              h∆∞·ªõng d·∫´n c·ª• th·ªÉ.
            </p>
          </div>
          <div className="bg-gray-50 rounded-lg p-4 shadow-sm hover:shadow-lg hover:-translate-y-1 transform transition duration-300 cursor-pointer">
            <h4 className="font-semibold mb-2">ü§ù H·ªçc h·ªèi s√°t sao</h4>
            <p className="text-sm text-gray-600">
              ƒê∆∞·ª£c ti·∫øp c·∫≠n tr·ª±c ti·∫øp v·ªõi ƒë·ªôi ng≈© k·ªπ thu·∫≠t v√† ƒë∆∞·ª£c feedback
              th∆∞·ªùng xuy√™n.
            </p>
          </div>
          <div className="bg-gray-50 rounded-lg p-4 shadow-sm hover:shadow-lg hover:-translate-y-1 transform transition duration-300 cursor-pointer">
            <h4 className="font-semibold mb-2">üöÄ C∆° h·ªôi th·ª≠ nhi·ªÅu vai tr√≤</h4>
            <p className="text-sm text-gray-600">
              C√¥ng ty nh·ªè linh ho·∫°t, b·∫°n c√≥ th·ªÉ th·ª≠ front-end, back-end, devops
              trong c√πng 1 d·ª± √°n.
            </p>
          </div>
        </div>
      </section>

      {/* Testimonial */}
      <TestimonialSection ref={(el) => (sectionRefs.current[3] = el)} />

      {/* Call to Action */}
      <section
        className="px-4 md:px-10 py-10 bg-gradient-to-r from-purple-500 to-blue-500 text-white text-center section-scroll"
        ref={(el) => (sectionRefs.current[4] = el)}
      >
        <h2 className="text-xl font-bold mb-4">S·∫µn S√†ng Tham Gia?</h2>
        <p className="mb-6">
          Sinh vi√™n: G·ª≠i h·ªì s∆° ngay ƒë·ªÉ ƒë∆∞·ª£c gi·ªõi thi·ªáu v√†o c√°c v·ªã tr√≠ th·ª±c t·∫≠p.{" "}
          <br />
        </p>
        <div className="space-x-4">
          <button 
          onClick={() => navigate(path.FORM_CV)} 
          className="bg-white text-purple-700 font-semibold px-4 py-2 rounded">
            G·ª≠i h·ªì s∆° th·ª±c t·∫≠p
          </button>
        </div>
      </section>

      {/* Footer */}
      <Footer />
    </div>
  );
};

export default HomePage;
